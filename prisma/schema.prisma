generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model invitation {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status     String   @db.VarChar(255)
  role       String   @db.VarChar(255)
  marka_id   String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  marka      marka?   @relation(fields: [marka_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model marka {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?      @db.VarChar(255)
  name        String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user_id     String       @db.Uuid
  tenant_id   String       @db.VarChar(255)
  invitation  invitation[]
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
}

model project {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String       @db.VarChar(255)
  description String       @db.VarChar(255)
  status      String       @db.VarChar(255)
  marka_id    String?      @db.Uuid
  user_id     String?      @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  marka       marka?       @relation(fields: [marka_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  submission  submission[]
}

model review {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status        String      @db.VarChar(255)
  comment       String?     @db.VarChar(255)
  submission_id String?     @db.Uuid
  user_id       String?     @db.Uuid
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  submission    submission? @relation(fields: [submission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model submission {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status     String   @db.VarChar(255)
  feedback   String?  @db.VarChar(255)
  project_id String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  review     review[]
  project    project? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  invitation  invitation[]
  marka       marka[]
  project     project[]
  review      review[]
  submission  submission[]
}
